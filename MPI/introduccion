INTRODUCCIÓN A MPI
 (message passed interfaced)


Master node (front-end, Administrador) distribuye el trabajo para los nodos hijos
MODELO DE MEMORIA DISTRIBUIDA

MODELO HTPC
	high tecnical perfonmance computing
	conocer la arquitectura en donde se va a trabajar 

MODELO HPC
	high performance computing 


EL número de hilos a trabajar con mpi es fijo.

MPI_Init     		- Identificanicialización de mpi
MPI_Finalize 		- Termina mpi
MPI_Comm_size		- Para aeveriguar el número de procesos
MPI_Comm_rank		- Identifica el proceso
MPI_Send			- Envía un mensaje
MPI_Recv			- Recibe un mensaje


Datatype, correponden a los de c
MPI_INT
MPI_FLOAT
.
.
.
MPI_PACKET
MPI_BYTE


SEND Y RECV
	MPI_Send(start, count, datatype, dest, tag, comm)  //bloqueante
		1. start: puntero a los datos a enviar
		2. count: número de elementos a enviar
		3. datatype: tipo de dato 
		4. dest: identificación del proceso destino
		5. tag: etiqueta de la comunicación
		6. comm: identificación del comunicador

	MPI_Recv(start, count, datatype, source, tag, comm, status)
		1. start: puntero para la recepción de datos
		2. count: número de elementos
		3. datatype: tipo de dato
		4. source: identificación del proceso origen
		5. tag: etiqueta de la comunicación
		6. comm: identificacipon del comunicador
		7. status: puntero para acceso a la información sobre el mensaje